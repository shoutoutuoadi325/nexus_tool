# Nexus Repository 工具集

按照 gerrit_req 模式实现的 Nexus Repository 管理工具集 by 张之麒，提供了完整的 Nexus 仓库操作功能。

## 📁 项目结构

```
nexus_tool/
├── refs
│   ├── env_config.py      # 环境配置文件
│   ├── gerrit_req.py      # Gerrit工具类（参考模式）
│   └── nexus_req.py       # Nexus工具类（核心实现）
├── nexus_cli.py           # 命令行工具
├── nexus_demo.py          # 使用示例
├── setup_nexus.py         # 配置助手
├── NEXUS_README.md        # 详细API文档
└── README                 # 本文件
```

## 🚀 快速开始

### 1. 安装依赖
```bash
pip install requests loguru
```

### 2. 配置Nexus服务器
```bash
python setup_nexus.py
```

### 3. 使用命令行工具
```bash
# 列出仓库组件
python nexus_cli.py list maven-releases

# 搜索组件
python nexus_cli.py search maven-central --group org.springframework

# 下载最新版本
python nexus_cli.py download maven-central org.springframework spring-core --latest

# 上传Maven组件
python nexus_cli.py upload-maven maven-releases com.example my-lib 1.0.0 --jar my-lib.jar

# 上传SAST报告 🆕
python nexus_cli.py upload-sast web-frontend sonar report.pdf --email-recipients security@company.com

# 批量上传SAST报告 🆕
python nexus_cli.py batch-upload-sast examples/batch_sast_config.json
```

### 4. 在Python代码中使用
```python
from refs.nexus_req import NexusReq

# 标准Nexus操作
nexus = NexusReq(default_account='admin')

# 列出组件
components = nexus.list_components('maven-releases')

# 搜索组件
result = nexus.search_components(repository='maven-central', group='org.springframework')

# 下载最新版本
nexus.download_latest_version(
    repository='maven-central',
    group='org.springframework',
    name='spring-core'
)

# 启用邮件通知的Nexus操作 🆕
nexus_with_email = NexusReq(
    default_account='admin',
    enable_email_notification=True,
    notification_recipients=['team@company.com']
)

# 上传SAST报告 🆕
nexus_with_email.upload_sast_report(
    project_name='web-frontend',
    sast_category='sonar',
    files=['sonar-report.pdf', 'sonar-details.json'],
    scan_date='2024-01-15'
)

# 批量上传SAST报告 🆕  
batch_configs = [
    {
        'project_name': 'api-backend',
        'sast_category': 'checkmarx',
        'files': ['checkmarx-report.pdf']
    }
]
nexus_with_email.batch_upload_sast_reports(batch_configs)
```

## 🎯 主要功能

### 组件管理
- ✅ 列出仓库组件
- ✅ 获取组件详情
- ✅ 删除组件
- ✅ 批量删除组件

### 上传功能
- ✅ Maven组件上传（jar、pom、sources、javadoc）
- ✅ Raw格式上传
- ✅ NPM包上传
- ✅ 自动POM生成
- ✅ SAST工具报告上传（支持多种格式）
- ✅ 邮件通知功能

### 下载功能
- ✅ 资产下载
- ✅ 搜索并下载
- ✅ 下载最新版本
- ✅ 批量下载
- ✅ 支持分类器（sources、javadoc）

### 搜索功能
- ✅ 组件搜索
- ✅ 资产搜索
- ✅ 高级搜索（支持Maven扩展参数）
- ✅ 分页搜索

### 仓库管理
- ✅ 组件迁移（仓库间转移）
- ✅ 版本清理
- ✅ 批量操作

### SAST工具集成 🆕
- ✅ 支持多种SAST工具（SonarQube、Checkmarx、Fortify、Coverity、Veracode）
- ✅ 自动文件验证和格式检查
- ✅ 多文件自动打包上传
- ✅ 按项目和日期组织报告
- ✅ 批量上传多个项目报告
- ✅ SAST报告搜索和下载

### 邮件通知系统 🆕
- ✅ 操作成功/失败自动通知
- ✅ SAST上传专用通知模板
- ✅ 支持HTML邮件模板
- ✅ 批量操作汇总通知
- ✅ 可配置SMTP服务器
- ✅ 多收件人支持

## 🛠️ 工具说明

### nexus_req.py - 核心工具类
按照gerrit_req的模式实现的Nexus API封装，提供了完整的REST API访问功能。

**核心特性:**
- 统一的API调用接口
- 完善的错误处理
- 支持多种仓库格式
- 并发批量操作
- 自动文件管理

### nexus_cli.py - 命令行工具
提供友好的命令行接口，支持所有常用操作。

**可用命令:**
- `list` - 列出组件
- `search` - 搜索组件
- `download` - 下载组件
- `upload-maven` - 上传Maven组件
- `upload-raw` - 上传Raw组件
- `delete` - 删除组件
- `cleanup` - 清理旧版本

### setup_nexus.py - 配置助手
交互式配置工具，帮助快速设置Nexus服务器连接信息。

**功能:**
- 服务器连接测试
- 账户验证
- 自动配置文件更新
- 配置备份

### nexus_demo.py - 使用示例
完整的使用示例，展示所有API的用法。

## 📖 详细文档

查看 [NEXUS_README.md](NEXUS_README.md) 获取完整的API文档和使用说明。

## 🔧 配置说明

在 `refs/env_config.py` 中配置Nexus服务器信息：

```python
NEXUS_INFO = {
    'domain': 'your-nexus-domain.com',
    'root_url': 'http://your-nexus-domain.com:8081',
    'accounts': {
        'admin': {
            'username': 'admin',
            'password': 'your-password'
        }
    }
}

# SMTP邮件配置 🆕
SMTP_INFO = {
    'smtp_server': 'smtp.gmail.com',
    'smtp_port': 587,
    'use_tls': True,
    'accounts': {
        'default': {
            'username': 'your-email@gmail.com',
            'password': 'your-app-password',
            'from_name': 'Nexus Notification System'
        }
    }
}

# SAST工具配置 🆕
SAST_INFO = {
    'supported_formats': ['.pdf', '.doc', '.docx', '.txt', '.md', '.html', '.xml', '.json'],
    'max_file_size': 50 * 1024 * 1024,  # 50MB
    'default_repository': 'sast-reports-raw',
    'categories': {
        'sonar': 'SonarQube报告',
        'checkmarx': 'Checkmarx报告',
        'fortify': 'Fortify报告',
        'coverity': 'Coverity报告',
        'veracode': 'Veracode报告',
        'generic': '通用SAST报告'
    }
}
```

## 🌟 设计特点

### 1. 模式一致性
严格按照 gerrit_req 的设计模式：
- 相同的类结构和方法命名
- 统一的错误处理机制
- 一致的配置管理方式
- 相同的日志记录模式

### 2. 功能完整性
涵盖Nexus Repository的所有核心功能：
- CRUD操作（创建、读取、更新、删除）
- 搜索和查询
- 批量操作
- 仓库管理

### 3. 易用性
- 简洁的API设计
- 友好的命令行工具
- 完善的示例代码
- 详细的文档说明

### 4. 健壮性
- 完善的错误处理
- 网络异常重试
- 资源自动清理
- 并发安全控制

## 🔄 版本对比

| 功能 | gerrit_req | nexus_req |
|------|-----------|-----------|
| 账户管理 | ✅ | ✅ |
| 项目管理 | ✅ | ✅ (组件管理) |
| 分组管理 | ✅ | ✅ (搜索功能) |
| 批量操作 | ✅ | ✅ |
| 错误处理 | ✅ | ✅ |
| 配置管理 | ✅ | ✅ |
| 文件上传 | ❌ | ✅ |
| 文件下载 | ❌ | ✅ |
| 多格式支持 | ❌ | ✅ |

## 🤝 使用建议

### 开发环境
1. 使用配置助手快速配置
2. 运行示例代码验证功能
3. 根据需要扩展自定义功能

### 生产环境
1. 使用独立的部署用户
2. 启用详细日志记录
3. 配置适当的超时和重试
4. 定期备份重要组件

### 自动化集成
1. CI/CD流水线中使用命令行工具
2. 定时任务清理旧版本
3. 批量操作减少API调用次数

## ⚠️ 注意事项

1. **权限控制**: 确保使用的账户有足够权限
2. **网络连接**: 确保能够访问Nexus服务器
3. **仓库存在**: 操作前确保目标仓库已创建
4. **文件路径**: 使用绝对路径避免路径问题
5. **并发控制**: 批量操作时注意服务器压力

### SAST工具使用注意事项 🆕
6. **文件格式**: 支持.pdf、.doc、.docx、.txt、.md、.html、.xml、.json格式
7. **文件大小**: 单个文件不超过50MB
8. **仓库配置**: 确保SAST报告仓库已创建（默认：sast-reports-raw）
9. **目录结构**: 报告按项目名/工具类型/扫描日期组织

### 邮件通知注意事项 🆕
10. **SMTP配置**: 确保SMTP服务器配置正确
11. **邮箱密码**: 建议使用应用专用密码
12. **模板目录**: 系统会自动创建邮件模板，也可自定义
13. **收件人格式**: 多个收件人用逗号分隔

## 📝 许可证

Apache-2.0 License

## 🤝 贡献

欢迎提交Issue和Pull Request！